@model Events.Model.Event
@{
    ViewBag.Title = "Create Event";
}






<div class="box box-info">
    <div class="box-header">
        <h3 class="box-title">@ViewBag.Title</h3>
    </div>
    <div class="box-body">


        @using (Html.BeginForm("Create",
                                "Event",
                                FormMethod.Post,
                                new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CountryId, "CountryId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CountryId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CityId, "CityId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CityId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input name="file" type="file" />

                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = "10", cols = "80" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

    </div>
</div>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts
{
    <script>
        $(function () {
            CKEDITOR.config.htmlEncodeOutput = true;
            CKEDITOR.replace('Description');

        });
         $('#CountryId').change(function ()
        {

            var selectedCountry = $("#CountryId").val();
            var citySelect = $('#CityId');
            citySelect.empty();
            if (selectedCountry != null && selectedCountry != '')
            {
                $.getJSON(
                    '@Url.Action("GetCities")',
                    { countryId: selectedCountry },
                    function (cities) {
                        if (cities != null && !jQuery.isEmptyObject(cities))
                        {

                            citySelect.append($('<option/>', { value: null, text: "" }));
                            $.each(cities, function (index, city) {
                                citySelect.append($('<option/>',
                                    { value: city.Id, text: city.Name }));
                            });
                        };
                    });
            }
        });
         $('#StartDate').datepicker({
             autoclose: true
         });
         $('#EndDate').datepicker({
             autoclose: true
         });
    </script>
@Scripts.Render("~/bundles/jqueryval")
}